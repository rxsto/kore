apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { .Values.api.name } }
  namespace: { { .Values.api.namespace } }
  labels:
    app: { { .Values.api.name } }
spec:
  replicas: { { .Values.api.replicaCount } }
  serviceName: { { .Values.api.name } }
  selector:
    matchLabels:
      app: { { .Values.api.name } }
  template:
    metadata:
      labels:
        app: { { .Values.api.name } }
    spec:
      containers:
        - name: { { .Values.api.name } }
          image: { { .Values.api.image.group } }/{ { .Values.api.image.name } }:{ { .Values.api.image.tag } }
          ports:
              - containerPort: { { .Values.api.port } }
          envFrom:
            - configMapRef:
              name: { { .Values.api.configMap } }
          livenessProbe:
            httpGet:
              path: { { .Values.api.probes.liveness } }
              port: { { .Values.api.port } }
            initialDelaySeconds: 2
            failureThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: { { .Values.api.probes.readiness } }
              port: { { .Values.api.port } }
            initialDelaySeconds: 2
            failureThreshold: 5
            periodSeconds: 1
